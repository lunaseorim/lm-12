library(plyr)
library(dplyr)
library(ggplot2)
library(survival)
library(survminer)
dat <- readxl::read_xlsx("임상데이터_분석용.xlsx")
View(dat)
library(plyr)
library(dplyr)
library(ggplot2)
library(survival)
library(survminer)
library(caret)
colnames(dat)
str(dat)
str(dat$성별)
table(dat$성별)
dat$성별[dat$성별==m] <- "M"
dat$성별[dat$성별=="m"] <- "M"
table(dat$성별)
str(dat)
dat$성별 <- factor(dat$성별,levels = 1:2 ,labels = 1:2)
dat <- readxl::read_xlsx("임상데이터_분석용.xlsx")
#성별전처리
dat$성별[dat$성별=="m"] <- "M"
dat$성별 <- factor(dat$성별,levels = c("M","F") ,labels = 1:2)
table(dat$OPcode)
str(dat$pStage)
table(dat$pStage)
toupper(dat$성별)
dat <- readxl::read_xlsx("임상데이터_분석용.xlsx")
toupper(dat$성별)
#성별전처리 : M=1,F=2
dat$성별 <- toupper(dat$성별) %>%
factor(dat$성별,levels = c("M","F") ,labels = 1:2)
#성별전처리 : M=1,F=2
dat$성별 <- toupper(dat$성별) %>%
factor(levels = c("M","F") ,labels = 1:2)
toupper(dat$pStage)
#STAGE 전처리
dat$pStage <- toupper(dat$pStage)
#STAGE 전처리
dat$pStage <- toupper(dat$pStage) %>%
factor()
str(dat)
table(dat$pStage)
#STAGE 전처리
dat$pStage <- toupper(dat$pStage) %>%
factor(levels = c("1A","1B","2A","2B","3A","3B","4") ,labels = c("1A","1B","2A","2B","3A","3B","4"))
dat$pStage <- toupper(dat$pStage) %>%
]
table(dat$pStage)
#size 전처리
regexpr("\\d",dat$Size)
regmatches(dat$Size,regexpr("\\d\\.\\d|\\d",dat$Size),invert = F) %>%
as.numeric()
#size 전처리
size_width <- regmatches(dat$Size,regexpr("\\d\\.\\d|\\d",dat$Size),invert = F) %>%
as.numeric()
str(size_width)
table(dat$`Cell type`)
a <- table(dat$`Cell type`)
a <- table(dat$`Cell type`) %>%
data.frame()
View(a)
#Cell type
regmatches(dat$`Cell type`,regexpr("ADC",dat$Size),invert = F)
#Cell type
regmatches(dat$`Cell type`,regexpr("ADC",dat$`Cell type`),invert = F)
regexpr("ADC",dat$`Cell type`)
str(regexpr("ADC",dat$`Cell type`))
regexpr("ADC",dat$`Cell type`)>0
length(a)
#Cell type
CT_names = c("ADC","SQC","LAC")
for (i in 1:length(CT_names)) {
CT_ordered_logic <- regexpr(CT_names[i],dat$`Cell type`)>0
dat$`Cell type`[CT_ordered_logic] <- regmatches(dat$`Cell type`,
regexpr("ADC",dat$`Cell type`),invert = F)
}
table(dat$`Cell type`)
a<-table(dat$`Cell type`) %>%
data.frame()
View(a)
CT_ordered_logic <- regexpr(CT_names[2],dat$`Cell type`)>0
dat <- readxl::read_xlsx("임상데이터_분석용.xlsx")
#Cell type
CT_names = c("ADC","SQC","LAC")
for (i in 1:length(CT_names)) {
CT_ordered_logic <- regexpr(CT_names[i],dat$`Cell type`)>0
dat$`Cell type`[CT_ordered_logic] <- regmatches(dat$`Cell type`,
regexpr(CT_names[i],dat$`Cell type`),
invert = F)
}
a<-table(dat$`Cell type`) %>%
data.frame()
View(a)
dat <- readxl::read_xlsx("임상데이터_분석용.xlsx")
a <- table(dat$Differentiation) %>%
data.frame()
View(a)
dat$`Cell type`
#Cell type : 조직학적 분류
CT_names = c("ADC","SQC","LAC")
for (i in 1:length(CT_names)) {
CT_ordered_logic <- regexpr(CT_names[i],dat$`Cell type`)>0
dat$`Cell type`[CT_ordered_logic] <- regmatches(dat$`Cell type`,
regexpr(CT_names[i],dat$`Cell type`),
invert = F)
}
str(dat$`Cell type`)
dat$`Cell type` <- factor(dat$`Cell type`,
levels = 1:3,
labels = CT_names)
table(dat$`Cell type`)
dat <- readxl::read_xlsx("임상데이터_분석용.xlsx")
#Cell type : 조직학적 분류
CT_names = c("ADC","SQC","LAC")
for (i in 1:length(CT_names)) {
CT_ordered_logic <- regexpr(CT_names[i],dat$`Cell type`)>0
dat$`Cell type`[CT_ordered_logic] <- regmatches(dat$`Cell type`,
regexpr(CT_names[i],dat$`Cell type`),
invert = F)
}
dat$`Cell type` <- factor(dat$`Cell type`,
levels = CT_names,
labels = CT_names)
table(dat$`Cell type`)
dat$cTNM
#림프절 침범여부 Regional lymph nodes (N) of TNM Stage
regmatches(A5$pTNM,regexpr("N1",dat$cTNM),invert = F)
#림프절 침범여부 Regional lymph nodes (N) of TNM Stage
regmatches(dat$cTNM,regexpr("N1",dat$cTNM),invert = F)
regexpr("N1",dat$cTNM)
a <- table(dat$cTNM) %>%
data.frame()
View(a)
#림프절 침범여부 Regional lymph nodes (N) of TNM Stage
N_stage <- c("N1","N2","N3")
regexpr(N_stage[i],dat$cTNM)>0
any(regexpr(N_stage[1],dat$cTNM)>0,
regexpr(N_stage[2],dat$cTNM)>0,
regexpr(N_stage[3],dat$cTNM)>0)
Nodes_logic <- any(regexpr(N_stage[1],dat$cTNM)>0|
regexpr(N_stage[2],dat$cTNM)>0|
regexpr(N_stage[3],dat$cTNM)>0)
any(regexpr(N_stage[1],dat$cTNM)>0|
regexpr(N_stage[2],dat$cTNM)>0|
regexpr(N_stage[3],dat$cTNM)>0)
Nodes_logic <- (regexpr(N_stage[1],dat$cTNM)>0|
regexpr(N_stage[2],dat$cTNM)>0|
regexpr(N_stage[3],dat$cTNM)>0)
regexpr(N_stage[1],dat$cTNM)>0|
regexpr(N_stage[2],dat$cTNM)>0|
regexpr(N_stage[3],dat$cTNM)>0
T|T
T|F
regexpr("M1",dat$cTNM)
regexpr("M1",dat$cTNM)>0
str(dat)
##성별
#M=1,F=2
dat$성별 <- toupper(dat$성별) %>%
factor(levels = c("M","F") ,labels = c("M","F"))
##STAGE
dat$pStage <- toupper(dat$pStage) %>%
factor(levels = c("1A","1B","2A","2B","3A","3B","4"),
labels = c("1A","1B","2A","2B","3A","3B","4"))
##size : 데이터 형태가 서로달라 width만 정의
size_width <- regmatches(dat$Size,
regexpr("\\d\\.\\d|\\d",dat$Size),invert = F) %>%
as.numeric()
##Cell type : 조직학적 분류
CT_names = c("ADC","SQC","LAC")
for (i in 1:length(CT_names)) {
CT_ordered_logic <- regexpr(CT_names[i],dat$`Cell type`)>0
dat$`Cell type`[CT_ordered_logic] <- regmatches(dat$`Cell type`,
regexpr(CT_names[i],dat$`Cell type`),
invert = F)
}
CT_ordered_logic <- regexpr(CT_names[i],dat$`Cell type`)>0
dat$`Cell type`[CT_ordered_logic] <- regmatches(dat$`Cell type`,
regexpr(CT_names[i],dat$`Cell type`),
invert = F)
dat$`Cell type`[CT_ordered_logic]
dat <- readxl::read_xlsx("임상데이터_분석용.xlsx")
##Cell type : 조직학적 분류
CT_names = c("ADC","SQC","LAC")
for (i in 1:length(CT_names)) {
CT_ordered_logic <- regexpr(CT_names[i],dat$`Cell type`)>0
dat$`Cell type`[CT_ordered_logic] <- regmatches(dat$`Cell type`,
regexpr(CT_names[i],dat$`Cell type`),
invert = F)
}
table(dat$`Cell type`)
dat$`Cell type` <- factor(dat$`Cell type`,
levels = CT_names,
labels = CT_names)
table(dat$`Cell type`)
dat <- readxl::read_xlsx("임상데이터_분석용.xlsx")
##성별
#M=1,F=2
dat$성별 <- toupper(dat$성별) %>%
factor(levels = c("M","F") ,labels = c("M","F"))
##STAGE
dat$pStage <- toupper(dat$pStage) %>%
factor(levels = c("1A","1B","2A","2B","3A","3B","4"),
labels = c("1A","1B","2A","2B","3A","3B","4"))
##size : 데이터 형태가 서로달라 width만 정의
size_width <- regmatches(dat$Size,
regexpr("\\d\\.\\d|\\d",dat$Size),invert = F) %>%
as.numeric()
##Cell type : 조직학적 분류
CT_names = c("ADC","SQC","LAC")
for (i in 1:length(CT_names)) {
CT_ordered_logic <- regexpr(CT_names[i],dat$`Cell type`)>0
dat$`Cell type`[CT_ordered_logic] <- regmatches(dat$`Cell type`,
regexpr(CT_names[i],dat$`Cell type`),
invert = F)
}
dat$`Cell type` <- factor(dat$`Cell type`,
levels = CT_names,
labels = CT_names)
##Differentiation : 분화,미분화형
#PD-Poorly/MD-Moderately/WD-Well
DT_names = c("PD","MD","WD")
for (i in 1:length(length(DT_names))) {
DT_ordered_logic <- regexpr(CT_names[i],dat$`Cell type`)>0
dat$Differentiation[DT_ordered_logic] <- regmatches(dat$Differentiation,
regexpr(DT_names[i],dat$Differentiation),
invert = F)
}
dat <- readxl::read_xlsx("임상데이터_분석용.xlsx")
##성별
#M=1,F=2
dat$성별 <- toupper(dat$성별) %>%
factor(levels = c("M","F") ,labels = c("M","F"))
##STAGE
dat$pStage <- toupper(dat$pStage) %>%
factor(levels = c("1A","1B","2A","2B","3A","3B","4"),
labels = c("1A","1B","2A","2B","3A","3B","4"))
##size : 데이터 형태가 서로달라 width만 정의
size_width <- regmatches(dat$Size,
regexpr("\\d\\.\\d|\\d",dat$Size),invert = F) %>%
as.numeric()
##Cell type : 조직학적 분류
CT_names = c("ADC","SQC","LAC")
for (i in 1:length(CT_names)) {
CT_ordered_logic <- regexpr(CT_names[i],dat$`Cell type`)>0
dat$`Cell type`[CT_ordered_logic] <- regmatches(dat$`Cell type`,
regexpr(CT_names[i],dat$`Cell type`),
invert = F)
}
dat$`Cell type` <- factor(dat$`Cell type`,
levels = CT_names,
labels = CT_names)
##Differentiation : 분화,미분화형
#PD-Poorly/MD-Moderately/WD-Well
DT_names = c("PD","MD","WD")
for (i in 1:length(length(DT_names))) {
DT_ordered_logic <- regexpr(DT_names[i],dat$`Cell type`)>0
dat$Differentiation[DT_ordered_logic] <- regmatches(dat$Differentiation,
regexpr(DT_names[i],dat$Differentiation),
invert = F)
}
dat <- readxl::read_xlsx("임상데이터_분석용.xlsx")
##성별
#M=1,F=2
dat$성별 <- toupper(dat$성별) %>%
factor(levels = c("M","F") ,labels = c("M","F"))
##STAGE
dat$pStage <- toupper(dat$pStage) %>%
factor(levels = c("1A","1B","2A","2B","3A","3B","4"),
labels = c("1A","1B","2A","2B","3A","3B","4"))
##size : 데이터 형태가 서로달라 width만 정의
size_width <- regmatches(dat$Size,
regexpr("\\d\\.\\d|\\d",dat$Size),invert = F) %>%
as.numeric()
##Cell type : 조직학적 분류
CT_names = c("ADC","SQC","LAC")
for (i in 1:length(CT_names)) {
CT_ordered_logic <- regexpr(CT_names[i],dat$`Cell type`)>0
dat$`Cell type`[CT_ordered_logic] <- regmatches(dat$`Cell type`,
regexpr(CT_names[i],dat$`Cell type`),
invert = F)
}
dat$`Cell type` <- factor(dat$`Cell type`,
levels = CT_names,
labels = CT_names)
##Differentiation : 분화,미분화형
#PD-Poorly/MD-Moderately/WD-Well
DT_names = c("PD","MD","WD")
for (i in 1:length(length(DT_names))) {
DT_ordered_logic <- regexpr(DT_names[i],dat$Differentiation)>0
dat$Differentiation[DT_ordered_logic] <- regmatches(dat$Differentiation,
regexpr(DT_names[i],dat$Differentiation),
invert = F)
}
dat$Differentiation[DT_ordered_logic
]
regexpr(DT_names[i],dat$Differentiation)>0
dat$Differentiation[DT_ordered_logic]
dat <- readxl::read_xlsx("임상데이터_분석용.xlsx")
##성별
#M=1,F=2
dat$성별 <- toupper(dat$성별) %>%
factor(levels = c("M","F") ,labels = c("M","F"))
##STAGE
dat$pStage <- toupper(dat$pStage) %>%
factor(levels = c("1A","1B","2A","2B","3A","3B","4"),
labels = c("1A","1B","2A","2B","3A","3B","4"))
##size : 데이터 형태가 서로달라 width만 정의
size_width <- regmatches(dat$Size,
regexpr("\\d\\.\\d|\\d",dat$Size),invert = F) %>%
as.numeric()
##Cell type : 조직학적 분류
CT_names = c("ADC","SQC","LAC")
for (i in 1:length(CT_names)) {
CT_ordered_logic <- regexpr(CT_names[i],dat$`Cell type`)>0
dat$`Cell type`[CT_ordered_logic] <- regmatches(dat$`Cell type`,
regexpr(CT_names[i],dat$`Cell type`),
invert = F)
}
dat$`Cell type` <- factor(dat$`Cell type`,
levels = CT_names,
labels = CT_names)
##Differentiation : 분화,미분화형
#PD-Poorly/MD-Moderately/WD-Well
DT_names = c("PD","MD","WD")
for (i in 1:length(DT_names)) {
DT_ordered_logic <- regexpr(DT_names[i],dat$Differentiation)>0
dat$Differentiation[DT_ordered_logic] <- regmatches(dat$Differentiation,
regexpr(DT_names[i],dat$Differentiation),
invert = F)
}
1:length(DT_names)
regexpr(DT_names[i],dat$Differentiation)>0
dat$Differentiation[DT_ordered_logic] <- regmatches(dat$Differentiation,
regexpr(DT_names[i],dat$Differentiation),
invert = F)
table(dat$Differentiation)
a<-table(dat$Differentiation) %>%
data.frame()
View(a)
dat$Differentiation[DT_ordered_logic]
DT_names[i]
regexpr(DT_names[i],dat$Differentiation)
DT_ordered_logic <- regexpr(DT_names[i],dat$Differentiation)>0
dat$Differentiation[DT_ordered_logic]
DT_ordered_logic
dat$Differentiation[27]
!is.na(DT_ordered_logic)
dat <- readxl::read_xlsx("임상데이터_분석용.xlsx")
##Differentiation : 분화,미분화형
#PD-Poorly/MD-Moderately/WD-Well
DT_names = c("PD","MD","WD")
ifelse(!is.na(DT_ordered_logic),DT_ordered_logic,F)
for (i in 1:length(DT_names)) {
DT_ordered_logic <- regexpr(DT_names[i],dat$Differentiation)>0
DT_logic_NA <- ifelse(!is.na(DT_ordered_logic),DT_ordered_logic,F)
dat$Differentiation[DT_logic_NA] <- regmatches(dat$Differentiation,
regexpr(DT_names[i],dat$Differentiation),
invert = F)
}
dat$Differentiation <- factor(labels = DT_names,
levels = DT_names)
dat$Differentiation
dat$Differentiation <- factor(dat$Differentiation,
labels = DT_names,
levels = DT_names)
dat <- readxl::read_xlsx("임상데이터_분석용.xlsx")
##성별
#M=1,F=2
dat$성별 <- toupper(dat$성별) %>%
factor(levels = c("M","F") ,labels = c("M","F"))
##STAGE
dat$pStage <- toupper(dat$pStage) %>%
factor(levels = c("1A","1B","2A","2B","3A","3B","4"),
labels = c("1A","1B","2A","2B","3A","3B","4"))
##size : 데이터 형태가 서로달라 width만 정의
size_width <- regmatches(dat$Size,
regexpr("\\d\\.\\d|\\d",dat$Size),invert = F) %>%
as.numeric()
##Cell type : 조직학적 분류
CT_names = c("ADC","SQC","LAC")
for (i in 1:length(CT_names)) {
CT_ordered_logic <- regexpr(CT_names[i],dat$`Cell type`)>0
dat$`Cell type`[CT_ordered_logic] <- regmatches(dat$`Cell type`,
regexpr(CT_names[i],dat$`Cell type`),
invert = F)
}
dat$`Cell type` <- factor(dat$`Cell type`,
levels = CT_names,
labels = CT_names)
##Differentiation : 분화,미분화형
#PD-Poorly/MD-Moderately/WD-Well
DT_names = c("PD","MD","WD")
for (i in 1:length(DT_names)) {
DT_ordered_logic <- regexpr(DT_names[i],dat$Differentiation)>0
DT_logic_NA <- ifelse(!is.na(DT_ordered_logic),DT_ordered_logic,F)
dat$Differentiation[DT_logic_NA] <- regmatches(dat$Differentiation,
regexpr(DT_names[i],dat$Differentiation),
invert = F)
}
dat$Differentiation <- factor(dat$Differentiation,
labels = DT_names,
levels = DT_names)
##림프절 침범여부 Regional lymph nodes (N) of TNM Stage
#N*= 0 , N*>0 = 1
N_stage <- c("N1","N2","N3")
Nodes_logic <- regexpr(N_stage[1],dat$cTNM)>0|
regexpr(N_stage[2],dat$cTNM)>0|
regexpr(N_stage[3],dat$cTNM)>0
cLN <- ifelse(Nodes_logic==T,1,0)
##암전이 여부 Distant metastasis (M) of TNM Stage
#0=M0, 1=M1
cMS <- ifelse(regexpr("M1",dat$cTNM)>0,1,0)
str(dat)
colnames(dat)
datset <- subset(dat,select = varname)
#새로만들기
varname <- c("성별""Age""pStage""Cell type""(+) LN 수""LN 총 수"
#새로만들기
varname <- c("성별","Age","pStage","Cell type","(+) LN 수","LN 총 수",
"P 53a","P 53b","ki 67a","ki 67b")
datset <- subset(dat,select = varname)
View(datset)
datset <- subset(dat,select = varname) %>%
cbind(size_width,cLN,cMS)
regmatches(dat$Size,
regexpr("\\d\\.\\d|\\d",dat$Size),invert = F)
any(is.na(dat$Size))
which(is.na(dat$Size))
length(which(is.na(dat$Size)))
##size : 데이터 형태가 서로달라 width만 정의
size_width <- regmatches(dat$Size,
regexpr("\\d\\.\\d|\\d",dat$Size),invert = F)
regmatches(dat$Size,
regexpr("\\d\\.\\d|\\d",dat$Size),invert = F)
length(regmatches(dat$Size,
regexpr("\\d\\.\\d|\\d",dat$Size),invert = F))
regexpr("\\d\\.\\d|\\d",dat$Size)
regexpr("\\d\\.\\d|\\d",dat$Size)
regexpr(CT_names[i],dat$`Cell type`)
regexpr("\\d\\.\\d|\\d",dat$`Cell type`)
regexpr("\\d\\.\\d|\\d",dat$Size)
##size : 데이터 형태가 서로달라 width만 정의
size_logic <- ifelse(regexpr("\\d\\.\\d|\\d",dat$Size)<0|
is.na(regexpr("\\d\\.\\d|\\d",dat$Size)))
size_logic <- ifelse(regexpr("\\d\\.\\d|\\d",dat$Size)<0|
is.na(regexpr("\\d\\.\\d|\\d",F,dat$Size)))
ifelse(regexpr("\\d\\.\\d|\\d",dat$Size)<0|
is.na(regexpr("\\d\\.\\d|\\d",dat$Size)),F,T)
regexpr("\\d\\.\\d|\\d",dat$Size),invert = F)
regexpr("\\d\\.\\d|\\d",dat$Size)
size_df <- data.frame(size = dat$Size,
logic = size_logic)
##size : 데이터 형태가 서로달라 width만 정의
size_logic <- ifelse(regexpr("\\d\\.\\d|\\d",dat$Size)<0|
is.na(regexpr("\\d\\.\\d|\\d",dat$Size)),F,T)
size_df <- data.frame(size = dat$Size,
logic = size_logic)
View(size_df)
regmatches(dat$Size,
regexpr("\\d\\.\\d|\\d",dat$Size),invert = F)
!size_logic
size_logic
size_df$width[size_logic] <- regmatches(dat$Size,
regexpr("\\d\\.\\d|\\d",dat$Size),invert = F)
View(size_df)
str(size_df)
size_df <- data.frame(size = dat$Size,logic = size_logic)
size_df$width[size_logic] <- regmatches(dat$Size,regexpr("\\d\\.\\d|\\d",dat$Size),invert = F) %>%
as.numeric()
#새로만들기
varname <- c("성별","Age","pStage","Cell type","(+) LN 수","LN 총 수",
"P 53a","P 53b","ki 67a","ki 67b","Differentiation")
datset <- subset(dat,select = varname) %>%
cbind(size_df$width,cLN,cMS)
View(datset)
datset <- subset(dat,select = varname) %>%
cbind(size_df$width,cLN,cMS) %>%
na.omit() %>%
data.frame()
View(size_df)
colnames(datset)
dat_names <- colnames(datset)
datset <- subset(dat,select = varname) %>%
cbind(size_df$width,cLN,cMS) %>%
na.omit() %>%
data.frame() %>%
`colnames<-`(c("Sex","Age","pStage","Cell.type","LN수(+)","LN총수",
"P.53a","P.53b","ki.67a","ki.67b","Differentiation","width","cLN","cMS" ))
View(datset)
